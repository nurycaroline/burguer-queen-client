import Head from 'next/head'
import { initializeApp } from 'firebase/app';
import { collection, getDocs, getFirestore, query, where, orderBy, Timestamp, onSnapshot } from 'firebase/firestore';
import { useEffect, useState } from 'react';
import { getAuth, signOut } from 'firebase/auth';
import { useRouter } from 'next/router'
import ListOldOrders from '@/containers/ListOldOrders';
import NewOrder from '@/containers/NewOrder';
import { MenuItem } from '@/types/MenuItem';
import { FirebaseConfigProps, getFirebaseConfig } from '@/lib/firebase';

type PedidosProps = {
  firebaseConfig: FirebaseConfigProps
}
export default function Pedidos({ firebaseConfig }: PedidosProps) {
  const app = initializeApp(firebaseConfig);
  const db = getFirestore(app);

  const router = useRouter();
  const [menu, setMenu] = useState<MenuItem[]>([]);

  const [oldOrders, setOldOrders] = useState<any[]>([]);

  async function getMenu() {
    const menuColection = query(collection(db, 'menu'))
    const menuSnapshot = await getDocs(menuColection);
    const menuList = menuSnapshot.docs.map(doc => {
      return { id: doc.id, ...doc.data() }
    }) as MenuItem[];

    setMenu(menuList);
  }

  async function getOrders() {
    const orderQuery = query(
      collection(db, 'order'),
      // where('created_at', '>', startDate),
      orderBy('created_at', 'desc')
    )

    onSnapshot(orderQuery, (querySnapshot) => {
      const orderList = querySnapshot.docs.map(doc => {
        return { id: doc.id, ...doc.data() }
      });

      setOldOrders(orderList);
    }, (error) => console.log(error));

  }

  const logoutUser = async () => {
    const auth = getAuth();
    try {
      await signOut(auth);
      router.push('/')
    } catch (error) {
      console.log(error)
    }
  }

  useEffect(() => {
    getMenu();
    getOrders()
  }, [])

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <header>
          <button onClick={logoutUser}>Sair</button>
        </header>

        <br />

        <NewOrder
          menu={menu}
          app={app}
        />

        <br />

        <ListOldOrders
          oldOrders={oldOrders}
          menu={menu}
        />
      </main>
    </>
  )
}


export async function getStaticProps() {
  const params = getFirebaseConfig()

  return {
    props: {
      firebaseConfig: params
    },
  }
}