import Head from 'next/head'
import { useState, useEffect } from 'react';
import { initializeApp } from 'firebase/app';
import { useRouter } from 'next/router'

import {
	getAuth,
	onAuthStateChanged,
	signInWithEmailAndPassword,
} from "firebase/auth";

const firebaseConfig = {
	apiKey: 'AIzaSyCKGMH0D7vAgZGtlVwHm4LjtMaVIeS6p48',
	authDomain: "burger-queen-29c57.firebaseapp.com",
	databaseURL: "https://burger-queen-29c57-default-rtdb.firebaseio.com",
	projectId: "burger-queen-29c57",
	storageBucket: "burger-queen-29c57.appspot.com",
	messagingSenderId: "432702061693",
	appId: "1:432702061693:web:fe7637a581c518be310514"
};

const app = initializeApp(firebaseConfig);

export default function Login() {
	const router = useRouter();
	const [username, setUsername] = useState("");
	const [password, setPassword] = useState("");

	const loginUser = async (e: { preventDefault: () => void; }) => {
		e.preventDefault();
		const auth = getAuth();
		try {
			const user = await signInWithEmailAndPassword(auth, username, password);
			console.log("User logged in", user);
			router.push('Pedidos')
		} catch (error: any) {
			const errorCode = error.code;
			switch (errorCode) {
				case "auth/invalid-email":
					alert("Email inválido");
					break;
				case "auth/user-not-found":
				case "auth/wrong-password":
					alert("Usuário ou Senha incorreta");
					break;
				default:
					alert("Erro desconhecido");
			}
		}
	};

	useEffect(() => {
		const auth = getAuth();
		onAuthStateChanged(auth, (user) => {
			if (user) {
				router.push('Pedidos')
			}
		});
	}, [router])


	return (
		<>
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main>
				<h1>Login</h1>

				<form onSubmit={loginUser}>
					<label htmlFor="user"> Email </label>
					<input
						onChange={(event) => {
							setUsername(event.target.value);
						}}
						name="user"
						required
					/>
					<label htmlFor="password"> Password </label>
					<input
						onChange={(event) => {
							setPassword(event.target.value);
						}}
						name="password"
						type="password"
						required
					/>
					<input name="login" type="submit" value="login" />
				</form>

				<br />
				<br />

				{/* <a href="/signup">Sign Up</a> */}
			</main>
		</>
	)
}
